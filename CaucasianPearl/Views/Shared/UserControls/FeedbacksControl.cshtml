@using CaucasianPearl;
@using CaucasianPearl.Core.Constants
@using CaucasianPearl.Core.DAL.Data
@using CaucasianPearl.Core.UserControls
@using CaucasianPearl.Properties
@using Resources

@model FeedbackItem

@Html.Raw(CssJsRegControl.Render("feedbacks_control.js", Consts.Paths.Js.CpJsPrefixPath, "windows-1251"))
@Html.Raw(CssJsRegControl.Render("feedbacks_control.css", Consts.Paths.Css.CpCssPrefixPath))

@* задаём параметры для feedbacks_control_form.js *@
<script type="text/javascript">
    var elementId = '@ViewData["elementId"]';
    var formUrl = '@Url.Action(Consts.Actions.CreatePartial, Consts.Controllers.Request.Name)';
    var reCaptchaPublicKey = '@Settings.Default.ReCaptchaPublicKey';
</script>

<div class="feedbacks">
    <h2>@ViewRes.Feedbacks</h2>

    <a id="previousFeedback" class="previous_feedback navigate" href="#" data-feedbackid="@Model.ID">Предыдущий отзыв</a>
    
    <div class="feedback_container">
        <div id="feedbackName" class="feedback_name">@Model.Name</div>
        <div id="feedbackCity" class="feedback_city">@Model.City</div>
        <div id="feedbackComment" class="feedback_comment trunc">@Model.Comment</div>
        <div id="feedbackCreated" class="feedback_created">@Model.Created</div>
    </div>

    <a id="nextFeedback" class="next_feedback navigate" href="#" data-feedbackid="@Model.ID">Следующий отзыв</a>
    
    @* форма отправки отзыва *@
    @Html.Partial(Consts.Paths.UserControls.FeedbackFormControl, new ViewDataDictionary { { "triggerElementId", "#sendFeedback" } })

    @* кнопка "Отправить отзыв" *@
    <input id="sendFeedback" class ="send_feedback" type="button" value="@ViewRes.SendFeedback" />
</div>