@using CaucasianPearl.Core.Constants
@using CaucasianPearl.Core.EntityServices.Interface
@using CaucasianPearl.Core.Helpers
@using CaucasianPearl.Core.UserControls
@using CaucasianPearl.Models.EDM
@using CaucasianPearl.Core.DAL.Data
@using Resources

@model IEnumerable<EventItem>

@Html.Raw(CssJsRegControl.Render("orbit/jquery.orbit-1.2.3.js", Consts.Paths.Plugins.PluginsPrefix))
@Html.Raw(CssJsRegControl.Render("orbit/orbit-1.2.3.css", Consts.Paths.Plugins.PluginsPrefix))

<!--[if IE]>
		<style type="text/css">
			.timer { display: none !important; }
			div.caption { background:transparent; filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000,endColorstr=#99000000);zoom: 1; }
	</style>
<![endif]-->

<script type="text/javascript">
    $(document).ready(function () {
        jQuery.noConflict();
    });

    $(window).load(function () {
        setSlider();
    });

    $(window).resize(function () {
        if ($(window).width() <= 940)
            $('.container *').width($(window).width());
    });

    setSlider = function () {
        $('#featured').orbit({
            animation: 'fade',  // fade, horizontal-slide, vertical-slide, horizontal-push
            animationSpeed: 1000,// how fast animtions are
            timer: true, // true or false to have the timer
            advanceSpeed: 4000, // if timer is enabled, time between transitions 
            pauseOnHover: true, // if you hover pauses the slider
            startClockOnMouseOut: false, // if clock should start on MouseOut
            startClockOnMouseOutAfter: 1000, // how long after MouseOut should the timer start again
            directionalNav: true, // manual advancing directional navs
            captions: true, // do you want captions?
            captionAnimation: 'fade', // fade, slideOpen, none
            captionAnimationSpeed: 800, // if so how quickly should they animate in
            bullets: false, // true or false to activate the bullet navigation
            bulletThumbs: false, // thumbnails for the bullets
            bulletThumbLocation: '', // location from this file where thumbs will be
            afterSlideChange: function () { } // empty function 
        });
    };
    
    setEventMedia = function (self) {
        $('html, body').animate({ scrollTop: 0 }, 'fast');
        var img = self.find('img');
        var eventItem = img.parents('.event_item');

        var eventMediaItems = eventItem.find('.event_media_items').children();
        var eventMediaItemsInfoBlocks = eventItem.find('.event_media_items_data');
        var featured =
            $('<div/>')
                .attr({ id: 'featured' })
                .html(eventMediaItems);
        $('.container')
            .empty()
            .append(featured)
            .append(eventMediaItemsInfoBlocks);

        $('#featured img, #featured div.video').first().hide().fadeIn().show();
        setSlider();

        getNeighborEvents(self.data(consts.ids.eventid));
    };

    getNeighborEvents = function (eventId) {
        var options = {
            url: '/event/getneighborevents',
            type: 'POST',
            data: { eventId: eventId },
            success: function (events) { onGetNeighborEventsSuccess(events); }
        };
        ajaxRequest(options);
    };

    onGetNeighborEventsSuccess = function (events) {
        if (!events)
            return;

        var eventItems = [];

        // события
        $.each(events, function (i, eventItem) {
            var eventItemControl = $('.event_item_template').clone();

            var eventPrimaryPhotoSrc = '';
            $.each(eventItem.EventMedia, function () {
                var self = $(this)[0];
                if (self.IsPrimary == true)
                    eventPrimaryPhotoSrc = self.ThumbnailUrl;
            });

            eventItemControl.find('.image img').attr('src', eventPrimaryPhotoSrc);
            eventItemControl.find('a').data(consts.ids.eventid, eventItem.ID);

            eventItemControl.find('.title').text(eventItem.Title);
            eventItemControl.find('.date').text(new Date(eventItem.EventDate).toDate());
            eventItemControl.find('.description').text(eventItem.Description);
            eventItemControl.find('.content').text(eventItem.Content);

            // div с медиа файлами события
            var eventMediaItemsControl = eventItemControl.find('.event_media_items');

            // медиа файлы события
            $.each(eventItem.EventMedia, function (k, eventMediaItem) {
                var eventMediaItemControl =
                    $('.event_media_item_template')
                        .clone()
                        .find('{0}'.f(eventMediaItem.MediaType == 'photos'
                            ? 'img'
                            : 'embed'));

                eventMediaItemControl.data({
                    eventid: eventMediaItem.EventId,
                    flickrurl: eventMediaItem.FlickrUrl,
                    description: eventMediaItem.Description,
                    content: eventMediaItem.Content,
                    caption: '#mediaItemInfo_{0}'.f(eventMediaItem.ID)
                });

                eventMediaItemControl
                    .attr({
                        src: eventMediaItem.MediaType == 'photos'
                            ? eventMediaItem.LargeUrl
                            : eventMediaItem.VideoUrl + eventMediaItemControl.attr('src')
                    })
                    .dblclick(function () {
                        openInNewTab(eventMediaItem.FlickrUrl);
                    });

                // если видео - оборачиваем в div
                if (eventMediaItem.MediaType != 'photos')
                    eventMediaItemControl = $('<div class="video"></div>').append($(eventMediaItemControl));

                eventMediaItemsControl.append(eventMediaItemControl);
            });

            // div с описанием/контентом для медиа файлов
            var eventMediaItemsInfosControl = eventItemControl.find('.event_media_items_data');

            $.each(eventItem.EventMedia, function (k, eventMediaItem) {
                if (eventMediaItem.Description != '' || eventMediaItem.Content != '') {
                    var eventmediaItemInfoControl =
                    $('.event_media_item_info_template')
                        .find('.orbit-caption')
                        .clone();

                    eventmediaItemInfoControl.attr({ id: 'thumbMediaItemInfo_{0}'.f(eventMediaItem.ID) });

                    eventmediaItemInfoControl.find('.description').html(eventMediaItem.Description);
                    eventmediaItemInfoControl.find('.content').html(eventMediaItem.Content);

                    eventMediaItemsInfosControl.append(eventmediaItemInfoControl);
                }
            });

            eventItems.push(eventItemControl);
        });

        $('#events .event_item').fadeOut(200, function () { $(this).remove(); });

        setTimeout(function () {
            $.each(eventItems, function (index) {
                $(this)
                    .removeClass('event_item_template')
                    .addClass('event_item')
                    .fadeIn()
                    .appendTo('#events');
            });
        }, 200);
    };
</script>

@* медиа элементы текущего события *@
@if (Model != null)
{
    EventItem currentEvent = ViewBag.CurrentEventInfo;
    if (currentEvent != null && currentEvent.EventMedia != null && currentEvent.EventMedia.Any())
    {
    <div class="container">
        @* event media *@
        <div id="featured">
            @foreach (var eventMediaItem in currentEvent.EventMedia)
            {
                if (eventMediaItem.MediaType == "photos")
                {
                <img
                            src="@eventMediaItem.LargeUrl"
                            ondblclick="openInNewTab('@eventMediaItem.FlickrUrl')"
                            data-caption="#mediaItemInfo_@eventMediaItem.ID" />
                }
                else
                {
                <div class="video">
                    <embed
                                src="@eventMediaItem.VideoUrl"
                                type="application/x-shockwave-flash"
                                width="940"
                                height="350"
                                allowfullscreen="true"
                                flashvars="flickr_target=_self&amp;onsite=true&amp;flickr_noAutoPlay=true&amp;hd_default=false"
                                data-caption="#mediaItemInfo_@eventMediaItem.ID">
                </div>
                }
            }
        </div>

        @* description/content *@
        <div class="event_media_items_data">
            @foreach (var eventMediaItem in currentEvent.EventMedia)
            {
                if (!string.IsNullOrWhiteSpace(eventMediaItem.Description) || !string.IsNullOrWhiteSpace(eventMediaItem.Content))
                {
                <div id="mediaItemInfo_@eventMediaItem.ID" class="orbit-caption">
                    @if (!string.IsNullOrWhiteSpace(eventMediaItem.Description))
                    {
                        <div class="description">@Html.Raw(eventMediaItem.Description)</div>
                    }
                </div>
                }
            }
        </div>
    </div>
    }
}

@* события *@
<div id="events" class="events" style="margin-top: 10px;">
    @foreach (var eventItem in Model)
    {
        <div class="event_item float_left">
            <div class="image float_left">
                <a class="event_link" data-eventid="@eventItem.ID" onclick="setEventMedia($(this))">
                    <img src="@(ServiceHelper<IEventService<Event>>.GetService().GetPrimaryPhotoUrl(eventItem))" />
                </a>
            </div>
            <div class="properties float_left">
                <div class="title property">@eventItem.Title</div>
                <div class="date property">@(eventItem.EventDate != null ? eventItem.EventDate.Value.ToShortDateString() : string.Empty)</div>
                <div class="description property">@eventItem.Description</div>
            </div>

    @{ 
        // скрытые медиа файлы события
        if (eventItem.EventMedia != null && eventItem.EventMedia.Any())
        {
                <div class="event_media_items">
                    @foreach (var eventMediaItem in eventItem.EventMedia)
                    {
                        if (eventMediaItem.MediaType == "photos")
                        {
                        <img src="@eventMediaItem.LargeUrl"
                                data-eventid="@eventItem.ID"
                                data-flickrurl="@eventMediaItem.FlickrUrl"
                                data-description="@eventMediaItem.Description"
                                data-content="@eventMediaItem.Content"
                                data-caption="#mediaItemInfo_@eventMediaItem.ID"
                                ondblclick="openInNewTab('@eventMediaItem.FlickrUrl')" />
                        }
                        else
                        {
                        <div class="video">
                            <embed src="@eventMediaItem.VideoUrl&amp;flickr_target=_self&amp;onsite=true&amp;flickr_noAutoPlay=true&amp;hd_default=false" type="application/x-shockwave-flash" width="940" height="350" scrolling="no" frameBorder="0" allowfullscreen="true"
                                    data-eventid="@eventItem.ID"
                                    data-flickrurl="@eventMediaItem.FlickrUrl"
                                    data-description="@eventMediaItem.Description"
                                    data-content="@eventMediaItem.Content"
                                    data-caption="#mediaItemInfo_@eventMediaItem.ID"
                                    ondblclick="openInNewTab('@eventMediaItem.FlickrUrl')" />
                        </div>
                        }
                    }
                </div>
            
                @* описание/контент медиа файлов события *@
                <div class="event_media_items_data">
                    @foreach (var eventMediaItem in eventItem.EventMedia)
                    {
                        if (!string.IsNullOrWhiteSpace(eventMediaItem.Description) || !string.IsNullOrWhiteSpace(eventMediaItem.Content))
                        {
                        <div id="thumbMediaItemInfo_@eventMediaItem.ID" class="orbit-caption">
                            @if (!string.IsNullOrWhiteSpace(eventMediaItem.Description))
                            {
                                <div class="description">@Html.Raw(eventMediaItem.Description)</div>   
                            }
                        </div>
                        }
                    }
                </div>
        }
            }
        </div>
    }
</div>

@* шаблон - событие *@
<div class="event_item_template float_left">
    <div class="image float_left">
        <a class="event_link" data-eventid="" onclick="setEventMedia($(this))">
            <img src="~/content/img/site/1x1.png" />
        </a>
    </div>
    <div class="properties float_left">
        <div class="title property"></div>
        <div class="date property"></div>
        <div class="description property"></div>
        @*<div class="content property"></div>*@
    </div>
    <div class="event_media_items"></div>
    <div class="event_media_items_data"></div>
</div>

@* шаблон - скрытые медиа файлы события *@
<div class="event_media_item_template">
    <img />
    <div class="video">
        <embed src="&amp;flickr_target=_self&amp;onsite=true&amp;flickr_noAutoPlay=true&amp;hd_default=false" type="application/x-shockwave-flash" width="940" height="350" scrolling="no" frameborder="0" allowfullscreen="true" />
    </div>
</div>

@* шаблон - описание/контент медиа файлов события *@
<div class="event_media_item_info_template">
    <div class="orbit-caption">
        <div class="description"></div>
        <div class="content"></div>
    </div>
</div>
