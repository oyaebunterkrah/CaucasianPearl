@using CaucasianPearl.Core.Constants
@using CaucasianPearl.Core.Helpers
@using CaucasianPearl.Core.Helpers.HtmlHelpers
@using CaucasianPearl.Resources;

@model CaucasianPearl.Models.EDM.Event

@{ ViewBag.Title = string.Format("{0} | {1}", Model.Title, ViewRes.ProjectTitleShort); }

<p>
    @* На домашнюю страницу *@
    @Html.ActionLink(ViewRes.ToHomePage,
        Consts.Actions.Index,
        controllerName: Consts.Controllers.Home.Name,
        routeValues: null,
        htmlAttributes: new { @class = "link" }
    )
    @* Все события *@
    @Consts.BreadcrumbsSeparator
    @Html.ActionLink(
        ViewRes.AllEvents,
        actionName: Consts.Actions.Index,
        routeValues: null,
        htmlAttributes: new { @class = "link" }
    )
    @Consts.BreadcrumbsSeparator
    @Model.Title
</p>

@if (User.IsInAnyRole(Consts.Roles.AdminContentManager)) {
    <p>
        <!-- Редактировать -->
        @Html.ActionLink(
            ViewRes.Edit,
            Consts.Actions.Edit,
            controllerName: Consts.Controllers.Event.Name,
            routeValues: new { id = Model.ID },
            htmlAttributes: new { @class = "link" })
        @Consts.MenuSeparator
        <!-- Удалить -->
        @Html.ActionLink(
            ViewRes.Delete, actionName: Consts.Actions.Delete,
            controllerName: Consts.Controllers.Event.Name,
            routeValues: new { id = Model.ID },
            htmlAttributes: new { @class = "link" })
        @Consts.MenuSeparator
        <!-- Создать -->
        @Html.ActionLink(
            ViewRes.CreateEvent,
            actionName: Consts.Actions.Create,
            controllerName: Consts.Controllers.Event.Name,
            routeValues: null,
            htmlAttributes: new { @class = "link" })
    </p>
}

<h2>@ViewRes.Event: @Model.Title</h2>

<br />

<fieldset>
    <legend>@Model.Title</legend>
    
    <div class="display-form">
        <div class="display-property">
            @Html.HiddenFor(model => model.ID)
            
            <div class="display-label">@Html.LabelFor(model => model.Title)</div>
            <div class="display-field">@Html.DisplayFor(model => model.Title)</div>
            <div class="clear"></div>
    
            <div class="display-label">@Html.LabelFor(model => model.EventDate)</div>
            <div class="display-field">@Html.DisplayFor(model => model.EventDate)</div>
            <div class="clear"></div>

            <div class="display-label">@Html.LabelFor(model => model.Description)</div>
            <div class="display-field">@Html.DisplayFor(model => model.Description)</div>
            <div class="clear"></div>
    
            <div class="display-label">@Html.LabelFor(model => model.Content)</div>
            <div class="display-field">@Html.DisplayFor(model => model.Content)</div>
            <div class="clear"></div>
            
            <div class="display-label">@Html.LabelFor(model => model.Cover)</div>
            <div class="display-field">@Html.DisplayFor(model => model.Cover)</div>
            <div class="clear"></div>

            <div class="display-label">@Html.LabelFor(model => model.ShortName)</div>
            <div class="display-field">@Html.DisplayFor(model => model.ShortName)</div>
            <div class="clear"></div>

            @Html.HiddenFor(model => model.Sequence)
        </div>
    </div>
</fieldset>

<div class="photosBlock" style="display: block;">
    @foreach (var mediaItem in Model.EventMedia)
    {
        <div class="photoContainer">
            <img class="@(mediaItem.IsPrimary ?? false ? "primary-mediaItem" : string.Empty) @(mediaItem.MediaType == "photos" ? "photo" : "video-selected")"
                 src="@mediaItem.ThumbnailUrl"
                 alt="@Model.Title"
                 data-flickrurl="@mediaItem.FlickrUrl"
                 ondblclick="openInNewTab($(this).data('flickrurl'))" />
        </div>
    }
</div>

<p>
    @Html.ActionLink(ViewRes.BackToList, Consts.Actions.Index)
</p>